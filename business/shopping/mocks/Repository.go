// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	shopping "AltaStore/business/shopping"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// GetShoppingCartById provides a mock function with given fields: id
func (_m *Repository) GetShoppingCartById(id string) (*shopping.ShoppCart, error) {
	ret := _m.Called(id)

	var r0 *shopping.ShoppCart
	if rf, ok := ret.Get(0).(func(string) *shopping.ShoppCart); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shopping.ShoppCart)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetShoppingCartByUserId provides a mock function with given fields: userid
func (_m *Repository) GetShoppingCartByUserId(userid string) (*shopping.ShoppCart, error) {
	ret := _m.Called(userid)

	var r0 *shopping.ShoppCart
	if rf, ok := ret.Get(0).(func(string) *shopping.ShoppCart); ok {
		r0 = rf(userid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shopping.ShoppCart)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewShoppingCart provides a mock function with given fields: id, userid, createdAt
func (_m *Repository) NewShoppingCart(id string, userid string, createdAt time.Time) (*shopping.ShoppCart, error) {
	ret := _m.Called(id, userid, createdAt)

	var r0 *shopping.ShoppCart
	if rf, ok := ret.Get(0).(func(string, string, time.Time) *shopping.ShoppCart); ok {
		r0 = rf(id, userid, createdAt)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shopping.ShoppCart)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, time.Time) error); ok {
		r1 = rf(id, userid, createdAt)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
